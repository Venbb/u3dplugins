package com.unity.plugins;

import android.content.Context;
import android.os.Environment;

import com.unity3d.player.UnityPlayer;

public class PathEx
{
	// 设备外存是否存在并且可读写
	static public final boolean hasSDCard()
	{
		// MEDIA_MOUNTED（SDcard存在并且可以进行读写）MEDIA_MOUNTED_READ_ONLY(SDcard存在，只可以进行读操作)
		return getExternalStorageState().equals(Environment.MEDIA_MOUNTED);
	}

	// 设备的外存是否是用内存模拟的，是则返回true。(API Level 11)
	// public static final boolean IsExternalStorageEmulated()
	// {
	// return Environment.isExternalStorageEmulated();
	// }

	// 设备的外存是否是可以拆卸的，比如SD卡，是则返回true。(API Level 9)
	public static final boolean isExternalStorageRemovable()
	{
		return Environment.isExternalStorageRemovable();
	}

	// 得到Android的根目录
	public static final String getRootDirectory()
	{
		return Environment.getRootDirectory().getPath();
	}

	// 应用在内存上的目录
	public static final String getFilesDir()
	{
		return getApplicationFilesDir(UnityPlayer.currentActivity);
	}

	// 应用在内存上的缓存目录
	public static final String getCacheDir()
	{
		return getApplicationgetCacheDir(UnityPlayer.currentActivity);
	}

	// 应用在内存上的目录
	public static final String getApplicationFilesDir(Context context)
	{
		return context.getFilesDir().getPath();
	}

	// 应用在内存上的缓存目录
	public static final String getApplicationgetCacheDir(Context context)
	{
		return context.getCacheDir().getPath();
	}

	public static final String getApplicationExternalFilesDir(Context context)
	{
		return context.getExternalFilesDir(Environment.DIRECTORY_PICTURES).getPath();
	}

	// 主要外部存储目录的状态
	public static final String getExternalStorageState()
	{
		return Environment.getExternalStorageState();
	}
}
